RULE tryDelete start wait and countdown setup
CLASS FileTree
METHOD withNode
AT ENTRY
BIND
    opName:String = $2
IF debug(opName) && debug(formatStack(10)) && "delete".equals(opName) && !flagged("delete start wait")
DO
    flag("delete start wait");

    debug(">>>wait for openInputStream");
    waitFor("openInputStream");
    debug("<<<proceeding with delete");
ENDRULE

RULE tryDelete retry signal
CLASS FileTree
METHOD withNode
AT EXIT
BIND
    opName:String = $2
IF debug(opName) && "delete".equals(opName)
DO
    debug(">>>second call to tryDelete(lambda)");
    signalWake("deleteRetry");
    debug("<<<proceeding with delete retry");
ENDRULE

RULE openInputStream signal and wait
CLASS JoinableFileManager
METHOD openInputStream
AT EXIT
IF TRUE
DO
    debug("<<<signal delete to proceed");
    signalWake("openInputStream");
    debug("<<<proceed with openInputStream")
ENDRULE

RULE inputStream close wait
CLASS JoinableFile$JoinInputStream
METHOD close
AT ENTRY
IF TRUE
DO
    debug(">>>Wait for deleteRetry signal");
    waitFor("deleteRetry");
    debug("<<<proceeding with stream close");
ENDRULE

